import java.util.Scanner;

public class StringLab {

	public static void main(String[] args) {
		
		Scanner scnr = new Scanner(System.in);
		/*
		System.out.print("Hello there! Please input your favorite word!: ");
		String word = scnr.next();
		System.out.println("Look at this! I've perfected the capitalization of your word!: " + capitalize(word));
		System.out.println("Don't worry! The fun is just beginning!");
		
		scnr.nextLine();
		
		System.out.print("Ok, now enter a sentence with the word Waldo in it: ");
		String phrase = scnr.nextLine();
		System.out.println("Guess what I know? The index where Waldo first appeared is " + wheresWaldo(phrase) + "!");
			
		System.out.print("This is where things get really good. Enter a word please: ");
		String word1 = scnr.next();
		System.out.print("Great word! Now enter another word please: ");
		String word2 = scnr.next();
		System.out.println("If you're wondering which word comes aplhabetically before the other: " + firstThingsFirst(word1, word2) + "!" );
		System.out.print("Prepare to have your mind blown! Enter a word: ");
		String reverseWord = scnr.next();
		System.out.println("Buckle up. The word you entered spelled backwards is: " + reverse(reverseWord) + "!");
		
		System.out.print("Enter a sentence please: ");
		String sentence1 = scnr.nextLine();
		
		
		System.out.print("Enter another sentence please: ");
		String sentence2 = scnr.nextLine();
		System.out.print("Ok. Get ready, because the longer of the two sentences you just enter is: ");
	    soLong(sentence1, sentence2);
	    
	    
		System.out.print("I'm going to give you one chance to enter a phrase with the word math somewhere in it: ");
		String mathPhrase = scnr.nextLine();
		System.out.println("Here's where your phrase used the word math: " + afterMath(mathPhrase));
		
		System.out.print("Okay, now enter a word you want to see taken apart, letter by letter: ");
		String letterWord = scnr.next();
		letterize(letterWord);
		*/
		System.out.print("And for my last trick, enter a phrase you want camelCased!: ");
		String camelPhrase = scnr.nextLine();
	
		System.out.println("Your camelCased phrase is: " + camelCase(camelPhrase));
		System.out.println("Amazing right??? Thanks for playing! Catch you on the flip side!");
		
		scnr.close();
		System.exit(0);
		
	}
	
	public static String capitalize(String word) {
		
		word = word.toLowerCase();
		word = word.substring(0, 1).toUpperCase() + word.substring(1);
		
		return word;
		
	}
	
	public static int wheresWaldo(String phrase) {
		
		int waldoIndex = phrase.indexOf("Waldo");
		
		return waldoIndex;
	}
	
	public static String firstThingsFirst(String a, String b) {
		
		String answer;
		
		if(a.compareToIgnoreCase(b) > 0) {
			answer = "your second word comes before your first alphabetically";	 
		} else {
			answer = "your first word comes before your second alphabetically";
		}
		
		return answer;
	}
	
	public static String reverse(String s) {
		
		String returnString = "";
		char c; 
		
		for(int i = 0; i < s.length(); i++) {
			c = s.charAt(i);
			returnString = c + returnString;
		}
		return returnString;
	}
	
	public static void soLong(String a, String b) {
		
		if(a.length() > b.length()) {
			System.out.println(a);
		} else if (a.length() < b.length()) {
			System.out.println(b);
		} else if (a.length() == b.length()) {
			System.out.println(a + " " + b);
		}
		
	}
	
	public static String afterMath (String phrase2) {
		
		String newString;
		int index;
		
		if (phrase2.contains("math")) {
			index = phrase2.indexOf("math");
			newString = phrase2.substring(index);
		} else {
			newString = "dud! Were you even listening?";
		}
		return newString;
	}
	
	public static void letterize(String word) {
		
		for(int i = 0; i < word.toCharArray().length; i++) {
			System.out.println(word.charAt(i));
		}
		
	}
	
	public static String camelCase(String phrase) {
		
		StringBuilder builder = new StringBuilder();
		boolean shouldConvertNextCharToLower = true;
			
		for (int i = 0; i < phrase.length(); i++) {
			char currentChar = phrase.charAt(i);
			if(currentChar == ' ') {
				shouldConvertNextCharToLower = false;
			} else if (shouldConvertNextCharToLower){
				builder.append(Character.toLowerCase(currentChar));
			} else {
			builder.append(Character.toUpperCase(currentChar));
			shouldConvertNextCharToLower = true;
		}
		}
		return builder.toString();
	}
	

}
